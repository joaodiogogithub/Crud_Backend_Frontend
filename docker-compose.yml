# docker compose up -d
# uvicorn app.main:app --reload

services:
  postgres_db:
    restart: unless-stopped
    image: postgres:16
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=default_db
      - POSTGRES_USER=rDGJeEDqAz
      - POSTGRES_PASSWORD=XsPQhCoEfOQZueDjsILetLDUvbvSxAMnrVtgVZpmdcSssUgbvs
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rDGJeEDqAz -d default_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - geotec
    expose:
      - 5432

  app_backend:
    depends_on:
      postgres_db:
        condition: service_healthy
    container_name: app_backend
    image: app_backend
    ports:
      - "8080:8000"
    build:
      context: "./backend"
      dockerfile: Dockerfile
    networks:
      - geotec
    environment:
      - SECURITY__JWT_SECRET_KEY=DVnFmhwvjEhJZpuhndxjhlezxQPJmBIIkMDEmFREWQADPcUnrG
      - SECURITY__BACKEND_CORS_ORIGINS=["http://localhost:5173","http://localhost:8001", "http://localhost"]
      - SECURITY__ALLOWED_HOSTS=["localhost", "127.0.0.1"]
      - DATABASE__HOSTNAME=postgres_db
      - DATABASE__USERNAME=rDGJeEDqAz
      - DATABASE__PASSWORD=XsPQhCoEfOQZueDjsILetLDUvbvSxAMnrVtgVZpmdcSssUgbvs
      - DATABASE__PORT=5432
      - DATABASE__DB=default_db

  app_frontend:
    depends_on:
      - app_backend
    container_name: app_frontend
    image: app_frontend
    ports:
      - "80:80"
    build:
      context: "./frontend"
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080 
    networks:
      - geotec

volumes:
  postgres_db:

networks:
  geotec:
    driver: bridge
